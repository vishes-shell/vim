let g:python_import_dict = {
\   "APIView": "from rest_framework.views",
\   "AnonymousUser": "from django.contrib.auth.models",
\   "AppConfig": "from django.apps",
\   "Avg": "from django.db.models",
\   "ContentType": "from django.contrib.contenttypes.models",
\   "Count": "from django.db.models",
\   "Decimal": "from decimal",
\   "F": "from django.db.models",
\   "GenericForeignKey": "from django.contrib.contenttypes.fields",
\   "Http404": "from django.http",
\   "HttpResponse": "from django.http",
\   "JsonResponse": "from django.http",
\   "Manager": "from django.db.models",
\   "Max": "from django.db.models",
\   "ObjectDoesNotExist": "from django.core.exceptions",
\   "Q": "from django.db.models",
\   "RegexValidator": "from django.core.validators",
\   "ValidationError": "from django.core.exceptions",
\   "cache": "from django.core.cache",
\   "cached_property": "from django.utils.functional",
\   "connection": "from django.db",
\   "datetime": "import datetime",
\   "deepcopy": "from copy",
\   "force_text": "from django.utils.encoding",
\   "generics": "from rest_framework",
\   "get_object_or_404": "from django.shortcuts",
\   "io": "import io",
\   "itertools": "import itertools",
\   "json": "import json",
\   "login_required": "from django.contrib.auth.decorators",
\   "mock": "import mock",
\   "operator": "import operator",
\   "os": "import os",
\   "parse_datetime": "from django.utils.dateparse",
\   "parse_qs": "from six.moves.urllib.parse",
\   "partial": "from functools",
\   "permissions": "from rest_framework",
\   "post_save": "from django.db.models.signals",
\   "pre_save": "from django.db.models.signals",
\   "pytest": "import pytest",
\   "quote": "from six.moves.urllib.parse",
\   "receiver": "from django.dispatch",
\   "render": "from django.shortcuts",
\   "six": "import six",
\   "status": "from rest_framework",
\   "time": "import time",
\   "timezone": "from django.utils",
\   "transaction": "from django.db",
\   "unittest": "import unittest",
\   "url_reverse": "from django.core.urlresolvers import reverse as",
\   "urlencode": "from six.moves.urllib.parse",
\   "urlparse": "from six.moves.urllib.parse",
\   "call_command": "from django.core.management",
\}
